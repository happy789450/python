# import time
# print(time.ctime()) #调用模块中的函数了
# import 首次导入模块的时候 会发生如下3步操作
# 1 打开模块文件
# 2 执行模块对应的文件，将执行过程中产生的名字都丢到模块的名称空间
# 3 在程序中会有一个模块的名称指向模块的名称空间去

from time import ctime,time  # 部分导入
from time import *  # 所有导入
print(ctime())

# from ...import 首次导入发生了3个步骤
# 1 以模块为准创造一个模块的名称空间
# 2 执行模块对应的文件，将执行过程中产生的名字都丢到模块的名称空间
# 3 在当前执行文件的名称空间中拿到一个名字，该名字直接指向模块中的某一个名字
# 意味着可以不用加任何的前缀而直接使用
# 优点:不用加前缀 代码更加简洁了
# 缺点:容易与当前执行文件冲名称空间中的名字冲突

# 相同点和不同点
# 相同
# 都会执行模块对应的文件 并且 都会产生模块的名称空间
# 两者在调用功能时，都需要转到定义时寻找作用域关系

# 不同点
# import 需要加前缀 from ...import 不需要加前缀